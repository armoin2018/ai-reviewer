# Dependency Management
name: Dependencies

on:
  schedule:
    # Run weekly on Mondays at 10 AM UTC
    - cron: '0 10 * * 1'
  workflow_dispatch:

jobs:
  # Update dependencies
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Check for outdated packages
        run: |
          npm outdated || true
          npm run deps:check || true

      - name: Update patch and minor versions
        run: |
          # Update patch versions (safe updates)
          npm update
          
          # Update minor versions for dev dependencies
          npm update --save-dev

      - name: Run dependency verification
        run: npm run deps:verify || true

      - name: Run security audit
        run: npm run security:audit

      - name: Run tests after updates
        run: |
          npm run test:unit
          npm run lint
          npm run typecheck

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: '🔄 Automated Dependency Updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates:
            
            - ✅ Security vulnerabilities addressed
            - ✅ Patch versions updated safely
            - ✅ Minor versions updated for dev dependencies
            - ✅ All tests passing
            - ✅ Type checking successful
            
            ### Changes
            - Updated patch versions for all dependencies
            - Updated minor versions for development dependencies
            - Verified compatibility with existing code
            
            ### Testing
            - [x] Unit tests pass
            - [x] Type checking passes
            - [x] Linting passes
            - [x] Security audit clean
            
            **Note**: This PR was automatically generated. Please review changes before merging.
          branch: automated/dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated
            chore

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm run security:audit

      - name: Check for high severity vulnerabilities
        run: |
          AUDIT_RESULT=$(npm audit --audit-level=high --json)
          HIGH_VULNS=$(echo $AUDIT_RESULT | jq '.metadata.vulnerabilities.high')
          CRITICAL_VULNS=$(echo $AUDIT_RESULT | jq '.metadata.vulnerabilities.critical')
          
          if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
            echo "❌ High or critical vulnerabilities found!"
            echo "High: $HIGH_VULNS, Critical: $CRITICAL_VULNS"
            exit 1
          else
            echo "✅ No high or critical vulnerabilities found"
          fi

      - name: Create security issue
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Security Vulnerabilities Detected',
              body: `## Security Alert
              
              High or critical security vulnerabilities were detected in project dependencies.
              
              **Action Required**: Review and update vulnerable packages immediately.
              
              ### Next Steps
              1. Run \`npm audit\` locally to see details
              2. Update vulnerable packages with \`npm audit fix\`
              3. Review WHITELIST.md and BLACKLIST.md
              4. Test all functionality after updates
              
              **Auto-generated on**: ${new Date().toISOString()}`,
              labels: ['security', 'high-priority', 'bug']
            });

  # License compliance check
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install license checker
        run: npm install -g license-checker

      - name: Check licenses
        run: |
          license-checker --onlyAllow 'MIT;Apache-2.0;ISC;BSD-2-Clause;BSD-3-Clause;CC0-1.0' --excludePrivatePackages
          
      - name: Generate license report
        run: |
          license-checker --csv --out licenses.csv
          license-checker --summary > license-summary.txt

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: |
            licenses.csv
            license-summary.txt
          retention-days: 30